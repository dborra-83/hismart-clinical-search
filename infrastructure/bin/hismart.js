#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("source-map-support/register");
const cdk = require("aws-cdk-lib");
const hismart_infrastructure_stack_1 = require("../lib/hismart-infrastructure-stack");
const hismart_cognito_stack_1 = require("../lib/hismart-cognito-stack");
const hismart_backend_stack_1 = require("../lib/hismart-backend-stack");
const app = new cdk.App();
// Variables de configuraci贸n desde contexto CDK o variables de entorno
const config = {
    account: process.env.CDK_DEFAULT_ACCOUNT || app.node.tryGetContext('account'),
    region: process.env.CDK_DEFAULT_REGION || app.node.tryGetContext('region') || 'us-east-1',
    environment: app.node.tryGetContext('environment') || 'dev',
    projectName: 'HISmart'
};
const stackProps = {
    env: {
        account: config.account,
        region: config.region
    },
    tags: {
        Project: config.projectName,
        Environment: config.environment,
        ManagedBy: 'CDK'
    }
};
// Stack principal con recursos base (S3, DynamoDB, VPC si necesario)
const infraStack = new hismart_infrastructure_stack_1.HiSmartInfrastructureStack(app, `${config.projectName}-Infrastructure-${config.environment}`, {
    ...stackProps,
    description: 'Recursos base para HISmart: S3, DynamoDB, EventBridge'
});
// Stack de autenticaci贸n con Cognito
const cognitoStack = new hismart_cognito_stack_1.HiSmartCognitoStack(app, `${config.projectName}-Cognito-${config.environment}`, {
    ...stackProps,
    description: 'Autenticaci贸n y autorizaci贸n con Amazon Cognito'
});
// Stack backend con Lambdas y API Gateway
const backendStack = new hismart_backend_stack_1.HiSmartBackendStack(app, `${config.projectName}-Backend-${config.environment}`, {
    ...stackProps,
    description: 'Backend serverless: Lambdas, API Gateway, Bedrock',
    bucket: infraStack.clinicalDataBucket,
    table: infraStack.clinicalNotesTable,
    userPool: cognitoStack.userPool,
    userPoolClient: cognitoStack.userPoolClient
});
// Stack frontend con CloudFront y S3 (comentado para despliegue inicial)
// const frontendStack = new HiSmartFrontendStack(app, `${config.projectName}-Frontend-${config.environment}`, {
//   ...stackProps,
//   description: 'Frontend React con CloudFront y S3',
//   api: backendStack.api,
//   userPool: cognitoStack.userPool,
//   userPoolClient: cognitoStack.userPoolClient
// });
// Dependencias entre stacks
backendStack.addDependency(infraStack);
backendStack.addDependency(cognitoStack);
// frontendStack.addDependency(backendStack);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlzbWFydC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImhpc21hcnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsdUNBQXFDO0FBQ3JDLG1DQUFtQztBQUNuQyxzRkFBaUY7QUFDakYsd0VBQW1FO0FBQ25FLHdFQUFtRTtBQUduRSxNQUFNLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztBQUUxQix1RUFBdUU7QUFDdkUsTUFBTSxNQUFNLEdBQUc7SUFDYixPQUFPLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUM7SUFDN0UsTUFBTSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLElBQUksV0FBVztJQUN6RixXQUFXLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLElBQUksS0FBSztJQUMzRCxXQUFXLEVBQUUsU0FBUztDQUN2QixDQUFDO0FBRUYsTUFBTSxVQUFVLEdBQW1CO0lBQ2pDLEdBQUcsRUFBRTtRQUNILE9BQU8sRUFBRSxNQUFNLENBQUMsT0FBTztRQUN2QixNQUFNLEVBQUUsTUFBTSxDQUFDLE1BQU07S0FDdEI7SUFDRCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTSxDQUFDLFdBQVc7UUFDM0IsV0FBVyxFQUFFLE1BQU0sQ0FBQyxXQUFXO1FBQy9CLFNBQVMsRUFBRSxLQUFLO0tBQ2pCO0NBQ0YsQ0FBQztBQUVGLHFFQUFxRTtBQUNyRSxNQUFNLFVBQVUsR0FBRyxJQUFJLHlEQUEwQixDQUFDLEdBQUcsRUFBRSxHQUFHLE1BQU0sQ0FBQyxXQUFXLG1CQUFtQixNQUFNLENBQUMsV0FBVyxFQUFFLEVBQUU7SUFDbkgsR0FBRyxVQUFVO0lBQ2IsV0FBVyxFQUFFLHVEQUF1RDtDQUNyRSxDQUFDLENBQUM7QUFFSCxxQ0FBcUM7QUFDckMsTUFBTSxZQUFZLEdBQUcsSUFBSSwyQ0FBbUIsQ0FBQyxHQUFHLEVBQUUsR0FBRyxNQUFNLENBQUMsV0FBVyxZQUFZLE1BQU0sQ0FBQyxXQUFXLEVBQUUsRUFBRTtJQUN2RyxHQUFHLFVBQVU7SUFDYixXQUFXLEVBQUUsaURBQWlEO0NBQy9ELENBQUMsQ0FBQztBQUVILDBDQUEwQztBQUMxQyxNQUFNLFlBQVksR0FBRyxJQUFJLDJDQUFtQixDQUFDLEdBQUcsRUFBRSxHQUFHLE1BQU0sQ0FBQyxXQUFXLFlBQVksTUFBTSxDQUFDLFdBQVcsRUFBRSxFQUFFO0lBQ3ZHLEdBQUcsVUFBVTtJQUNiLFdBQVcsRUFBRSxtREFBbUQ7SUFDaEUsTUFBTSxFQUFFLFVBQVUsQ0FBQyxrQkFBa0I7SUFDckMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxrQkFBa0I7SUFDcEMsUUFBUSxFQUFFLFlBQVksQ0FBQyxRQUFRO0lBQy9CLGNBQWMsRUFBRSxZQUFZLENBQUMsY0FBYztDQUM1QyxDQUFDLENBQUM7QUFFSCx5RUFBeUU7QUFDekUsZ0hBQWdIO0FBQ2hILG1CQUFtQjtBQUNuQix1REFBdUQ7QUFDdkQsMkJBQTJCO0FBQzNCLHFDQUFxQztBQUNyQyxnREFBZ0Q7QUFDaEQsTUFBTTtBQUVOLDRCQUE0QjtBQUM1QixZQUFZLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ3ZDLFlBQVksQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDekMsNkNBQTZDIiwic291cmNlc0NvbnRlbnQiOlsiIyEvdXNyL2Jpbi9lbnYgbm9kZVxuaW1wb3J0ICdzb3VyY2UtbWFwLXN1cHBvcnQvcmVnaXN0ZXInO1xuaW1wb3J0ICogYXMgY2RrIGZyb20gJ2F3cy1jZGstbGliJztcbmltcG9ydCB7IEhpU21hcnRJbmZyYXN0cnVjdHVyZVN0YWNrIH0gZnJvbSAnLi4vbGliL2hpc21hcnQtaW5mcmFzdHJ1Y3R1cmUtc3RhY2snO1xuaW1wb3J0IHsgSGlTbWFydENvZ25pdG9TdGFjayB9IGZyb20gJy4uL2xpYi9oaXNtYXJ0LWNvZ25pdG8tc3RhY2snO1xuaW1wb3J0IHsgSGlTbWFydEJhY2tlbmRTdGFjayB9IGZyb20gJy4uL2xpYi9oaXNtYXJ0LWJhY2tlbmQtc3RhY2snO1xuaW1wb3J0IHsgSGlTbWFydEZyb250ZW5kU3RhY2sgfSBmcm9tICcuLi9saWIvaGlzbWFydC1mcm9udGVuZC1zdGFjayc7XG5cbmNvbnN0IGFwcCA9IG5ldyBjZGsuQXBwKCk7XG5cbi8vIFZhcmlhYmxlcyBkZSBjb25maWd1cmFjacOzbiBkZXNkZSBjb250ZXh0byBDREsgbyB2YXJpYWJsZXMgZGUgZW50b3Jub1xuY29uc3QgY29uZmlnID0ge1xuICBhY2NvdW50OiBwcm9jZXNzLmVudi5DREtfREVGQVVMVF9BQ0NPVU5UIHx8IGFwcC5ub2RlLnRyeUdldENvbnRleHQoJ2FjY291bnQnKSxcbiAgcmVnaW9uOiBwcm9jZXNzLmVudi5DREtfREVGQVVMVF9SRUdJT04gfHwgYXBwLm5vZGUudHJ5R2V0Q29udGV4dCgncmVnaW9uJykgfHwgJ3VzLWVhc3QtMScsXG4gIGVudmlyb25tZW50OiBhcHAubm9kZS50cnlHZXRDb250ZXh0KCdlbnZpcm9ubWVudCcpIHx8ICdkZXYnLFxuICBwcm9qZWN0TmFtZTogJ0hJU21hcnQnXG59O1xuXG5jb25zdCBzdGFja1Byb3BzOiBjZGsuU3RhY2tQcm9wcyA9IHtcbiAgZW52OiB7XG4gICAgYWNjb3VudDogY29uZmlnLmFjY291bnQsXG4gICAgcmVnaW9uOiBjb25maWcucmVnaW9uXG4gIH0sXG4gIHRhZ3M6IHtcbiAgICBQcm9qZWN0OiBjb25maWcucHJvamVjdE5hbWUsXG4gICAgRW52aXJvbm1lbnQ6IGNvbmZpZy5lbnZpcm9ubWVudCxcbiAgICBNYW5hZ2VkQnk6ICdDREsnXG4gIH1cbn07XG5cbi8vIFN0YWNrIHByaW5jaXBhbCBjb24gcmVjdXJzb3MgYmFzZSAoUzMsIER5bmFtb0RCLCBWUEMgc2kgbmVjZXNhcmlvKVxuY29uc3QgaW5mcmFTdGFjayA9IG5ldyBIaVNtYXJ0SW5mcmFzdHJ1Y3R1cmVTdGFjayhhcHAsIGAke2NvbmZpZy5wcm9qZWN0TmFtZX0tSW5mcmFzdHJ1Y3R1cmUtJHtjb25maWcuZW52aXJvbm1lbnR9YCwge1xuICAuLi5zdGFja1Byb3BzLFxuICBkZXNjcmlwdGlvbjogJ1JlY3Vyc29zIGJhc2UgcGFyYSBISVNtYXJ0OiBTMywgRHluYW1vREIsIEV2ZW50QnJpZGdlJ1xufSk7XG5cbi8vIFN0YWNrIGRlIGF1dGVudGljYWNpw7NuIGNvbiBDb2duaXRvXG5jb25zdCBjb2duaXRvU3RhY2sgPSBuZXcgSGlTbWFydENvZ25pdG9TdGFjayhhcHAsIGAke2NvbmZpZy5wcm9qZWN0TmFtZX0tQ29nbml0by0ke2NvbmZpZy5lbnZpcm9ubWVudH1gLCB7XG4gIC4uLnN0YWNrUHJvcHMsXG4gIGRlc2NyaXB0aW9uOiAnQXV0ZW50aWNhY2nDs24geSBhdXRvcml6YWNpw7NuIGNvbiBBbWF6b24gQ29nbml0bydcbn0pO1xuXG4vLyBTdGFjayBiYWNrZW5kIGNvbiBMYW1iZGFzIHkgQVBJIEdhdGV3YXlcbmNvbnN0IGJhY2tlbmRTdGFjayA9IG5ldyBIaVNtYXJ0QmFja2VuZFN0YWNrKGFwcCwgYCR7Y29uZmlnLnByb2plY3ROYW1lfS1CYWNrZW5kLSR7Y29uZmlnLmVudmlyb25tZW50fWAsIHtcbiAgLi4uc3RhY2tQcm9wcyxcbiAgZGVzY3JpcHRpb246ICdCYWNrZW5kIHNlcnZlcmxlc3M6IExhbWJkYXMsIEFQSSBHYXRld2F5LCBCZWRyb2NrJyxcbiAgYnVja2V0OiBpbmZyYVN0YWNrLmNsaW5pY2FsRGF0YUJ1Y2tldCxcbiAgdGFibGU6IGluZnJhU3RhY2suY2xpbmljYWxOb3Rlc1RhYmxlLFxuICB1c2VyUG9vbDogY29nbml0b1N0YWNrLnVzZXJQb29sLFxuICB1c2VyUG9vbENsaWVudDogY29nbml0b1N0YWNrLnVzZXJQb29sQ2xpZW50XG59KTtcblxuLy8gU3RhY2sgZnJvbnRlbmQgY29uIENsb3VkRnJvbnQgeSBTMyAoY29tZW50YWRvIHBhcmEgZGVzcGxpZWd1ZSBpbmljaWFsKVxuLy8gY29uc3QgZnJvbnRlbmRTdGFjayA9IG5ldyBIaVNtYXJ0RnJvbnRlbmRTdGFjayhhcHAsIGAke2NvbmZpZy5wcm9qZWN0TmFtZX0tRnJvbnRlbmQtJHtjb25maWcuZW52aXJvbm1lbnR9YCwge1xuLy8gICAuLi5zdGFja1Byb3BzLFxuLy8gICBkZXNjcmlwdGlvbjogJ0Zyb250ZW5kIFJlYWN0IGNvbiBDbG91ZEZyb250IHkgUzMnLFxuLy8gICBhcGk6IGJhY2tlbmRTdGFjay5hcGksXG4vLyAgIHVzZXJQb29sOiBjb2duaXRvU3RhY2sudXNlclBvb2wsXG4vLyAgIHVzZXJQb29sQ2xpZW50OiBjb2duaXRvU3RhY2sudXNlclBvb2xDbGllbnRcbi8vIH0pO1xuXG4vLyBEZXBlbmRlbmNpYXMgZW50cmUgc3RhY2tzXG5iYWNrZW5kU3RhY2suYWRkRGVwZW5kZW5jeShpbmZyYVN0YWNrKTtcbmJhY2tlbmRTdGFjay5hZGREZXBlbmRlbmN5KGNvZ25pdG9TdGFjayk7XG4vLyBmcm9udGVuZFN0YWNrLmFkZERlcGVuZGVuY3koYmFja2VuZFN0YWNrKTsiXX0=